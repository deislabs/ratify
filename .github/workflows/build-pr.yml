name: build-pr

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: setup go environment
        uses: actions/setup-go@v3
        with:
          go-version: "1.17"
      - name: Build CLI
        run: make
      - name: Check build
        run: bin/ratify version

  build_test_e2e:
    name: "Build and run e2e Test"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    strategy:
      matrix:
        KUBERNETES_VERSION: ["1.23.0"]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap KUBERNETES_VERSION=${{ matrix.KUBERNETES_VERSION }}
      - name: Run e2e
        run: |
          make e2e-deploy-gatekeeper
          make e2e-deploy-ratify           
          go mod tidy
          # there should be no additional manifest or go.mod changes
          git diff --exit-code
          make test-e2e
      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l control-plane=controller-manager --tail=-1 > logs-externaldata-controller.json
          kubectl logs -n gatekeeper-system -l control-plane=audit-controller --tail=-1 > logs-externaldata-audit.json
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: externaldata-logs
          path: |
            logs-*.json        
