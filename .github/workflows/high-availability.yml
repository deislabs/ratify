name: high-availability

on:
  pull_request_target:
    types: [labeled]
  pull_request:
    branches:
      - main
      - 1.0.0*
  push:
    branches:
      - 1.0.0*
      - main
  workflow_dispatch:

permissions: read-all

jobs:
  build_test_replica:
    name: "Build and run replica test"
    runs-on: ubuntu-latest
    timeout-minutes: 25
    continue-on-error: true
    permissions:
      contents: read
    strategy:
      matrix:
        DAPR_VERSION: ["1.11.1"]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - name: Set up Go 1.20
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: '1.20'

      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap
          make generate-certs
      - name: Run e2e
        run: |
          make e2e-deploy-gatekeeper
          make e2e-helm-deploy-ratify-replica DAPR_VERSION=${{ matrix.DAPR_VERSION }}
          make test-high-availability
      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l control-plane=controller-manager --tail=-1 > logs-externaldata-controller-${{ matrix.DAPR_VERSION }}.json
          kubectl logs -n gatekeeper-system -l control-plane=audit-controller --tail=-1 > logs-externaldata-audit-${{ matrix.DAPR_VERSION }}.json
          kubectl logs -n gatekeeper-system -l app=ratify --tail=-1 > logs-ratify-preinstall-${{ matrix.DAPR_VERSION }}.json
          kubectl logs -n gatekeeper-system -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify-${{ matrix.DAPR_VERSION }}.json
      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: ${{ always() }}
        with:
          name: e2e-logs
          path: |
            logs-*.json
