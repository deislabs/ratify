name: publish-ghcr

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: prepare
        id: prepare
        run: |
          VERSION=${GITHUB_REF#refs/*/}
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "${VERSION}" == "${BRANCH_NAME}" ]]; then
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=ref::ghcr.io/${{ github.repository }}:${VERSION}
          echo ::set-output name=crdref::ghcr.io/${{ github.repository }}-crds:${VERSION}
      - name: docker build ratify
        run: |
          docker build -f ./httpserver/Dockerfile --label org.opencontainers.image.revision=${{ github.sha }} -t ${{ steps.prepare.outputs.ref }} .
      - name: docker build ratify-crds
        run: |
          docker build -f ./httpserver/Dockerfile --label org.opencontainers.image.revision=${{ github.sha }} -t ${{ steps.prepare.outputs.crdref }} .
      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker push ratify
        run: |
          docker push ${{ steps.prepare.outputs.ref }}
      - name: docker push ratify-crds
        run: |
          docker push ${{ steps.prepare.outputs.crdref }}
      - name: clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json